name: nginx-docker-image-build

on:
  push:
  schedule:
    - cron: '0 */8 * * *'

jobs: 
  nginx-docker-image-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: docker login
        run: docker login -u ${{ secrets.DOCKERUSERNAME }} -p ${{ secrets.DOCKERAPIKEY }}
      - name: treehouses nginx
        run: |
          export DOCKER_CLI_EXPERIMENTAL=enabled
          repo="rjole/nginx"
          source utils.sh
          alpine_arm_sha=$(get_manifest_sha "treehouses/alpine:latest" "arm")
          echo "alpine arm"
          echo $alpine_arm_sha
          nginx_arm_sha=$(get_manifest_sha "nginx:latest" "arm")
          echo "nginx arm"
          echo $nginx_arm_sha
          flag_arm=$(is_base "treehouses/alpine@"$alpine_arm_sha "nginx@"$nginx_arm_sha)
          echo "flag arm"
          echo $flag_arm
          alpine_amd64_sha=$(get_manifest_sha "treehouses/alpine:latest" "amd64")
          echo $alpine_amd64_sha
          nginx_amd64_sha=$(get_manifest_sha "nginx:latest" "amd64")
          echo $nginx_amd64_sha
          flag_amd64=$(is_base "treehouses/alpine@"$alpine_amd64_sha "nginx@"$nginx_amd64_sha)
          echo "flag amd64"
          echo $flag_amd64
          alpine_arm64_sha=$(get_manifest_sha "arm64v8/alpine:latest" "arm64")
          echo $alpine_amd64_sha
          nginx_arm64_sha=$(get_manifest_sha "arm64v8/nginx:latest" "arm64")
          echo $nginx_arm64_sha
          flag_arm64=$(is_base "treehouses/alpine@"$alpine_arm64_sha "nginx@"$nginx_arm64_sha)
          echo "flag arm64"
          echo $flag_arm64
          version2=$(image_version nginx:latest)
          echo "repo version is $version2"
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          build_image "treehouses/alpine:latest" arm "nginx"
          build_image "treehouses/alpine:latest" amd64 "nginx"
          build_image "treehouses/alpine:latest" arm64 "nginx"
          flag=$(compare_sha "treehouses/alpine@"$alpine_arm_sha "nginx@"$nginx_arm_sha "treehouses/alpine@"$alpine_amd64_sha "nginx@"$nginx_amd64_sha "treehouses/alpine@"$alpine_arm64_sha "nginx@"$nginx_arm64_sha "nginx" "nginx-tags:amd64")
          echo $flag
          deploy_image "$repo" arm
          deploy_image "$repo" amd64
          deploy_image "$repo" arm64
          tag=$(date +%Y%m%d%H%M)
          tag2="latest"
          echo $tag
          docker manifest create $repo:$tag "nginx"$nginx_arm_sha "nginx"$nginx_arm64_sha  "nginx"$nginx_amd64_sha  
          docker manifest create $repo:$latest "nginx"$nginx_arm_sha "nginx"$nginx_arm64_sha  "nginx"$nginx_amd64_sha  
          docker manifest annotate $repo:$latest "nginx"$nginx_arm_sha --arch arm 
          docker manifest annotate $repo:$tag "nginx"$nginx_arm_sha --arch arm 
          docker manifest annotate $repo:$latest "nginx"$nginx_arm64_sha --arch arm64
          docker manifest annotate $repo:$tag "nginx"$nginx_arm64_sha --arch arm64
          docker manifest annotate $repo:$latest "nginx"$nginx_amd64_sha --arch amd64
          docker manifest annotate $repo:$tag "nginx"$nginx_amd64_sha --arch amd64
          docker manifest inspect $repo:$tag
          docker manifest inspect $repo:$tag2
          if [[ $flag == true ]]; then
            docker manifest push $repo:$tag; docker manifest push $repo:$tag2
          else
            echo "no changes"
          fi
