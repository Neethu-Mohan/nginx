name:  build by force

on:
  #push:
  #  branches:
  #    - master
  #    - main
  workflow_dispatch:
  #repository_dispatch:
  #  types: alpine

jobs:
  alpine:
    runs-on: ubuntu-20.04
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: docker login
        run: docker login -u ${{ secrets.DOCKERUSERNAME }} -p ${{ secrets.DOCKERAPIKEY }}
      - name: treehouses nginx
        run: |
          export DOCKER_CLI_EXPERIMENTAL=enabled
          repo="neethumohan1212/nginx"
          source .github/workflows/utils.sh
          echo "amd64"
          alpine_x86=$(get_variant_sha "alpine" "latest" "amd64")
          echo $alpine_x86
          # nginx_x86=$(get_manifest_sha "$repo:latest" "amd64")
          # echo $nginx_x86
          echo "arm"
          alpine_arm=$(get_variant_sha "alpine" "latest" "arm")
          echo $alpine_arm
          # nginx_arm=$(get_manifest_sha "$repo:latest" "arm")
          # echo $nginx_arm
          echo "arm64"
          alpine_arm64=$(get_variant_sha "alpine" "latest" "arm64")
          echo $alpine_arm64
          # nginx_arm64=$(get_manifest_sha "$repo:latest" "arm64")
          # echo $nginx_arm64
          echo "change"
          flag=true #$(compare_sha "$alpine_x86" "$nginx_x86" "$alpine_arm" "$nginx_arm" "$alpine_arm64" "$nginx_arm64")
          echo $flag
          if [[ $flag == true ]]; then
            docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
            build_image "treehouses/alpine:latest" amd64 $repo
            build_image "treehouses/alpine:latest" arm $repo
            build_image "treehouses/alpine:latest" arm64 $repo
            deploy_image $repo arm
            deploy_image $repo amd64
            deploy_image $repo arm64
            echo "tags"
            tag="$(date +%Y%m%d%H%M)"
            echo $tag
            docker manifest create $repo:$tag $repo-tags:amd64 $repo-tags:arm $repo-tags:arm64
            docker manifest annotate $repo:$tag $repo-tags:amd64 --arch amd64
            docker manifest annotate $repo:$tag $repo-tags:arm64 --arch arm64
            docker manifest annotate $repo:$tag $repo-tags:arm --arch arm
            docker manifest inspect $repo:$tag
            docker manifest push $repo:$tag
            tag2="latest"
            echo $tag2
            docker manifest create $repo:$tag2 $repo-tags:amd64 $repo-tags:arm $repo-tags:arm64
            docker manifest annotate $repo:$tag2 $repo-tags:amd64 --arch amd64
            docker manifest annotate $repo:$tag2 $repo-tags:arm64 --arch arm64
            docker manifest annotate $repo:$tag2 $repo-tags:arm --arch arm
            docker manifest inspect $repo:$tag2
            docker manifest push $repo:$tag2
          else
            echo "no changes"
          fi
